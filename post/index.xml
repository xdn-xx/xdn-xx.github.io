<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on A Hugo website</title>
    <link>/post/</link>
    <description>Recent content in Posts on A Hugo website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 23 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>2020-12-22</title>
      <link>/2020/12/23/2020-12-22note/</link>
      <pubDate>Wed, 23 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/12/23/2020-12-22note/</guid>
      <description>下载数据download.file(&amp;quot;https://pzhao.org/data/birdflu.xls/&amp;quot;,&amp;quot;birdflu2.xls&amp;quot;)将该数据读入 Rflucase &amp;lt;- read.csv(&amp;quot;D:/studyr/workpath/Rtraining/birdflu_case.csv&amp;quot;)数据行列分别为多少dim(flucase)## [1] 15 7r1 &amp;lt;- dim(flucase)[1]r2 &amp;lt;- dim(flucase)[2]r1## [1] 15r2## [1] 7这个数据表有15行，有7列
各列的列名称是什么？数据结构是什么？cn &amp;lt;- colnames(flucase)for(i in 1:7){a=class(flucase[,i])print(paste0(&amp;quot;第&amp;quot;,i,&amp;quot;列&amp;quot;,as.character(a)))}## [1] &amp;quot;第1列character&amp;quot;## [1] &amp;quot;第2列integer&amp;quot;## [1] &amp;quot;第3列integer&amp;quot;## [1] &amp;quot;第4列integer&amp;quot;## [1] &amp;quot;第5列integer&amp;quot;## [1] &amp;quot;第6列integer&amp;quot;## [1] &amp;quot;第7列integer&amp;quot;列名为country, X2003, X2004, X2005, X2006, X2007, X2008，数据结构是data.frame</description>
    </item>
    
    <item>
      <title>2020-12-22</title>
      <link>/2020/12/23/2020-12/</link>
      <pubDate>Wed, 23 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/12/23/2020-12/</guid>
      <description></description>
    </item>
    
    <item>
      <title>2020-12-22note2</title>
      <link>/2020/12/23/2020-12-22note2/</link>
      <pubDate>Wed, 23 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/12/23/2020-12-22note2/</guid>
      <description>画图##基础画图
aq &amp;lt;- read.csv(&amp;#39;D:/studyr/workpath/Rtraining/aq.csv&amp;#39;)plot(aq$Temp)plot(x=aq$Temp,y=aq$Ozone)plot(x=aq$Temp,y=aq$Ozone,pch=16,col=&amp;#39;blue&amp;#39;)#library(beginr)#plotpch(3)#查询标记#colors()#查询颜色循环及判断x&amp;lt;-1if(x&amp;gt;0){print(&amp;quot;positive&amp;quot;)}else{print(&amp;quot;zero or negative&amp;quot;)}## [1] &amp;quot;positive&amp;quot;x1 &amp;lt;- ifelse(x&amp;gt;0, &amp;quot;positive&amp;quot;,&amp;quot;zero or negative&amp;quot;)plot(x=aq$Temp,y=aq$Ozone,type=&amp;quot;l&amp;quot;, #type选点还是线各种pch = ifelse(aq$Temp &amp;lt; 70,8,3),xlim=c(50,100),ylim=c(30,50),xlab=&amp;quot;tem&amp;quot;,ylab=&amp;quot;ozone&amp;quot;,col = ifelse(aq$ozone &amp;gt; 100, &amp;quot;red&amp;quot;,&amp;quot;blue&amp;quot;),cex = ifelse(aq$Solar.R&amp;gt;200,2,1))练习2zs &amp;lt;- read.csv(&amp;quot;D:/studyr/workpath/Rtraining/zs1.csv&amp;quot;)plot(x =zs$x,y=zs$y1,type=&amp;quot;l&amp;quot;,col=&amp;quot;red&amp;quot;,xlab = &amp;quot;Date&amp;quot;, ylab = &amp;quot;Concentration&amp;quot;,ylim = c(120,160))lines(x =zs$x,y=zs$y2,type=&amp;quot;l&amp;quot;,col=&amp;quot;blue&amp;quot;,ylim = c(120,160))#polygon(c(zs$x[1:100],zs$x[100:1]),c(zs))多边形涂色y &amp;lt;- read.</description>
    </item>
    
    <item>
      <title>2020-12-23</title>
      <link>/2020/12/23/2020-12-23/</link>
      <pubDate>Wed, 23 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/12/23/2020-12-23/</guid>
      <description>数据处理读入数据#read.table()#readr::read_csv()#大数据、多字节字符library(readxl)#readxl::read_excel()case &amp;lt;- read_excel(&amp;quot;D:/studyr/workpath/Rtraining/birdflu.xls&amp;quot;,sheet = &amp;quot;case&amp;quot;)#R包的数据#remotes::install_github(&amp;#39;expersso/WHO&amp;#39;)#library(WHO)#codes &amp;lt;- get_codes()#写出文件#wriwrite.csv(case,&amp;quot;D:/studyr/workpath/Rtraining/new_flu.csv&amp;quot;,sheetname= &amp;quot;h&amp;quot;,append=TRUE)#R格式#saveRDS(death,file= &amp;quot;filedeath.RDS&amp;quot;)#death2 &amp;lt;- readRDS(&amp;quot;filedeath.RDS&amp;quot;)数据练习cz=read_excel(&amp;quot;D:/studyr/workpath/Rtraining/cz.xlsx&amp;quot;)rep(1:3,each=4)#例子## [1] 1 1 1 1 2 2 2 2 3 3 3 3cz$ym &amp;lt;- paste(cz$year,cz$month,sep = &amp;quot;_&amp;quot;)cz2 &amp;lt;- data.frame(year=rep(2006:2019,each=12),month=rep(1:12,each=14))cz2$ym &amp;lt;- paste(cz2$year,cz2$month,sep = &amp;quot;_&amp;quot;)##数据框合并cz3 &amp;lt;- merge(cz,cz2,by=&amp;quot;ym&amp;quot;,all=TRUE)cz3 &amp;lt;- cz3[, !(colnames(cz3) %in% c(&amp;quot;ym&amp;quot;, &amp;quot;year.</description>
    </item>
    
    <item>
      <title>first</title>
      <link>/2020/12/21/firstday/</link>
      <pubDate>Mon, 21 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/12/21/firstday/</guid>
      <description>R基本操作读取文件write.csv(iris, &amp;quot;dtf.csv&amp;quot;)dtf &amp;lt;- read.csv(&amp;quot;dtf.csv&amp;quot;)#利用数据框读入df1 &amp;lt;- data.frame(age = c(12,33,45),gender=c(&amp;quot;f&amp;quot;,&amp;quot;m&amp;quot;,&amp;quot;f&amp;quot;))对文件进行基本计算round(3.14,digits=2)## [1] 3.14signif(0.04300, digits = 3)## [1] 0.043#周长c(10, 20, 30, 40 ,60)*2*pi## [1] 62.83185 125.66371 188.49556 251.32741 376.99112#面积c(10, 20, 30, 40, 60)^2*pi## [1] 314.1593 1256.6371 2827.4334 5026.5482 11309.7336#对自然对数ee=exp(1)e## [1] 2.718282#计算yx=c(0.2, 2, 20, 200)y=x*3.2/e+98y## [1] 98.23544 100.35443 121.</description>
    </item>
    
    <item>
      <title>A Plain Markdown Post</title>
      <link>/2016/12/30/a-plain-markdown-post/</link>
      <pubDate>Fri, 30 Dec 2016 21:49:57 -0700</pubDate>
      
      <guid>/2016/12/30/a-plain-markdown-post/</guid>
      <description>This is a post written in plain Markdown (*.md) instead of R Markdown (*.Rmd). The major differences are:
 You cannot run any R code in a plain Markdown document, whereas in an R Markdown document, you can embed R code chunks (```{r}); A plain Markdown post is rendered through Blackfriday, and an R Markdown document is compiled by rmarkdown and Pandoc.  There are many differences in syntax between Blackfriday&amp;rsquo;s Markdown and Pandoc&amp;rsquo;s Markdown.</description>
    </item>
    
    <item>
      <title>Lorem Ipsum</title>
      <link>/2015/01/01/lorem-ipsum/</link>
      <pubDate>Thu, 01 Jan 2015 13:09:13 -0600</pubDate>
      
      <guid>/2015/01/01/lorem-ipsum/</guid>
      <description>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</description>
    </item>
    
  </channel>
</rss>
